<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>大学数学基础</title>
    <link href="/2023/08/11/Math1/"/>
    <url>/2023/08/11/Math1/</url>
    
    <content type="html"><![CDATA[ <!-- 在线显示PDF --> <!-- 第一种方式，可调整pdf显示的大小，比较灵活 --> <!-- <embed src="./DXJC.pdf" width="100%" height="750" type="application/pdf"> --> <!-- 第二种方式 --> <div class="row">    <embed src="./DXJC.pdf" width="100%" height="550" type="application/pdf"></div> ]]></content>
    
    
    <categories>
      
      <category>个人</category>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学</tag>
      
      <tag>PDF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在Hxeo中阅览PDF文件</title>
    <link href="/2018/09/21/%E5%9C%A8Hxeo%E4%B8%AD%E9%98%85%E8%A7%88PDF%E6%96%87%E4%BB%B6/"/>
    <url>/2018/09/21/%E5%9C%A8Hxeo%E4%B8%AD%E9%98%85%E8%A7%88PDF%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>这段时间想要在线预览自己的PDF，于是在网上找了许多相关的资料，自己尝试了许久，摸索出完整的 hexo整合pdf.js过程</p><h3 id="1-安装-hexo-pdf"><a href="#1-安装-hexo-pdf" class="headerlink" title="1.安装 hexo-pdf"></a>1.安装 hexo-pdf</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-pdf </span><br></code></pre></td></tr></table></figure><h3 id="2-修改项目的-config-yml配置"><a href="#2-修改项目的-config-yml配置" class="headerlink" title="2.修改项目的 _config.yml配置"></a>2.修改项目的 _config.yml配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h3 id="3-在source-posts下创建目录，放入pdf文件"><a href="#3-在source-posts下创建目录，放入pdf文件" class="headerlink" title="3.在source_posts下创建目录，放入pdf文件"></a>3.在source_posts下创建目录，放入pdf文件</h3><h3 id="4-创建与上面目录相同名的md文件"><a href="#4-创建与上面目录相同名的md文件" class="headerlink" title="4.创建与上面目录相同名的md文件"></a>4.创建与上面目录相同名的md文件</h3><div class="note note-success">            <p>注意：md文件的名称一定要与第三步创建的目录同名，如我的目录是<code>PDF01</code>，那 md 文件名为<code>PDF01.md</code></p>          </div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&lt;!-- 在线显示PDF --&gt;<br><br>&lt;!-- 第一种方式，可调整pdf显示的大小，比较灵活 --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">embed</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./xxx.pdf&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;750&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;application/pdf&quot;</span>&gt;</span></span><br><br>&lt;!-- 第二种方式 --&gt;<br>&lt;!-- &#123;% pdf ./xxx.pdf %&#125; --&gt;<br></code></pre></td></tr></table></figure><h3 id="5-保存启动即可"><a href="#5-保存启动即可" class="headerlink" title="5.保存启动即可"></a>5.保存启动即可</h3>]]></content>
    
    
    <categories>
      
      <category>个人</category>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo和Github搭建个人博客</title>
    <link href="/2018/06/24/first/"/>
    <url>/2018/06/24/first/</url>
    
    <content type="html"><![CDATA[<h3 id="1-安装Git和NodeJS"><a href="#1-安装Git和NodeJS" class="headerlink" title="1. 安装Git和NodeJS"></a>1. 安装Git和NodeJS</h3><ul><li><p>在Windows上使用Git，可以从Git官网直接<a href="https://git-scm.com/downloads%EF%BC%8C">https://git-scm.com/downloads，</a> 然后按默认选项安 装即可。安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就 说明Git安装成功！</p></li><li><p>在Git中绑定Github账号，打开“Git Bash”，在命令框中依次输入两行命令：</p></li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">git config --<span class="hljs-keyword">global</span> user.name “Your Name”<br>git config --<span class="hljs-keyword">global</span> user.email email@example.com<br><span class="hljs-comment"># 其中Your Name和email@example.com替换成上面注册时的账户名和邮箱</span><br></code></pre></td></tr></table></figure><ul><li><p>由于 Hexo 是基于 Node.js 驱动的一款博客框架，所以安装<a href="https://nodejs.org/en/download/">NodeJS</a>并配置环境变量。</p></li><li><p>安装之后可以输入以下命令查看是否安装成功：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">git version<br>node -v<br>npm -v<br></code></pre></td></tr></table></figure></li></ul><h3 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2. 安装Hexo"></a>2. 安装Hexo</h3><ul><li><p>以上环境准备好了就可使用 npm 开始安装 Hexo 了，在命令行输入执行如下命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">npm install -g hexo-cli<br></code></pre></td></tr></table></figure></li><li><p>安装 Hexo 完成后，在指定文件夹下打开“Git Bash”，再执行下列命令，Hexo 将会在指定文件夹中 新建所须要的文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">hexo init myBlog<br>cd myBlog<br>npm install<br></code></pre></td></tr></table></figure></li></ul><h3 id="3-加载主题"><a href="#3-加载主题" class="headerlink" title="3.加载主题"></a>3.加载主题</h3><ul><li>可以去官网上找自己喜欢的主题下载<a href="https://hexo.io/themes/">https://hexo.io/themes/</a> ，自己采用的主题是Fluid。</li><li>随后将下载的主题文件夹放在 <code>myblog/themes</code> 中，在 <code>_config.yml</code> 文件中修改theme 为Fluid(注意和主题文件名一致)</li><li>修改好后执行<code>hexo g</code>再<code>hexo s</code>即可</li></ul><h3 id="4-修改主题配置"><a href="#4-修改主题配置" class="headerlink" title="4.修改主题配置"></a>4.修改主题配置</h3><ul><li>修改在主题文件夹下的 <code>_config.yml</code> 文件，完成自己个人的配置。</li></ul><h3 id="5-将博客部署在GitHub上"><a href="#5-将博客部署在GitHub上" class="headerlink" title="5.将博客部署在GitHub上"></a>5.将博客部署在GitHub上</h3><ul><li><p>点击 Start project 或者下面的 new repository 建立一个新的仓库，注意Github 仅能使用一个同 名仓库的代码托管一个静态站点，这里注意仓库名一定要是： <code>用户名.github.io</code></p></li><li><p>配置 SSH key ，要使用 git 工具首先要配置一下SSH key，为部署本地博客到 Github 作准备。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">git config --<span class="hljs-keyword">global</span> user.name <span class="hljs-string">&quot;用户名&quot;</span><br>git config --<span class="hljs-keyword">global</span> user.email <span class="hljs-string">&quot;邮箱地址&quot;</span><br>ssh-keygen -t rsa -C <span class="hljs-string">&#x27;上面的邮箱&#x27;</span><br></code></pre></td></tr></table></figure><p>按照提示完成三次回车，便可生成 ssh key，采用以下指令也可以查看自己的ssh：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub<br></code></pre></td></tr></table></figure><p>首次使用还须要确认并添加主机到本机SSH可信列表。若返回 <code>Hi xxx! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code> 内容，则证实添加成功。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure></li><li><p>登陆 Github 上添加刚刚生成的SSH key，按如下步骤添加，右上角点击头像-&gt; settings -&gt; SSH and GPG keys，建立一个新的 SSH key, 标题随便，key 就填刚才生成那个，确认建立，这样在你 的 SSH keys 列表里就会看到你刚刚添加的密钥。此时，本地和Github的工做作得差不了，是时候把它们两个链接起来了。你也能够查看官网的部署 教程。先不着急，部署以前还须要修改配置和安装部署插件。第一：打开项目根目录下的 _config.yml 配置文件配置参数。拉到文件末尾，填上以下配置。</p><p><img src="/img/frist_1.png"></p></li><li><p>第二要安装一个部署插件 hexo-deployer-git，打开“Git Bach”，输如以下指令：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure></li><li><p>最后执行如下两条命令就能够部署上传啦，如下 g 是 generate 缩写，d 是 deploy 缩写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">hexo g <span class="hljs-comment"># 先生成</span><br>hexo d <span class="hljs-comment"># 部署到Github上</span><br></code></pre></td></tr></table></figure></li><li><p>这时用浏览器输入 用户名.github.io 即可</p></li></ul><h3 id="6-写文章并上传"><a href="#6-写文章并上传" class="headerlink" title="6.写文章并上传"></a>6.写文章并上传</h3><ul><li><p>新建文章，输 入如下命令便可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">hexo new <span class="hljs-string">&#x27;文章标题&#x27;</span><br></code></pre></td></tr></table></figure></li><li><p>执行完成后能够在 &#x2F;source&#x2F;_posts 下看到一个“文章标题.md”的文章文件</p></li><li><p>之后依次输入以下命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">hexo g <span class="hljs-comment"># 生成文件</span><br>hexo s <span class="hljs-comment"># 本地服务器查看网站</span><br>hexo d <span class="hljs-comment"># 部署到Github 上</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="7-配置一些特效"><a href="#7-配置一些特效" class="headerlink" title="7.配置一些特效"></a>7.配置一些特效</h3><ul><li><p>雪花特效： <code>themes\hexo-theme-Chic\layout\index.ejs</code> 中添加如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;!-- 雪花特效 --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml"><span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://libs.baidu.com/jquery/1.8.3/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml"><span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/snow.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>蜘蛛网特效： themes\hexo-theme-Chic\layout\layout.ejs 中添加如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script&gt;<br>!<br><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params">n, e, t</span>) &#123;<br><span class="hljs-keyword">return</span> n.<span class="hljs-title function_">getAttribute</span>(e) || t<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params">n</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(n)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">t</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">var</span> t = <span class="hljs-title function_">e</span>(<span class="hljs-string">&quot;script&quot;</span>),<br>o = t.<span class="hljs-property">length</span>,<br>i = t[o - <span class="hljs-number">1</span>];<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">l</span>: o,<br><span class="hljs-attr">z</span>: <span class="hljs-title function_">n</span>(i, <span class="hljs-string">&quot;zIndex&quot;</span>, -<span class="hljs-number">1</span>), <span class="hljs-comment">//置于主页面背后</span><br><span class="hljs-attr">o</span>: <span class="hljs-title function_">n</span>(i, <span class="hljs-string">&quot;opacity&quot;</span>, <span class="hljs-number">.5</span>), <span class="hljs-comment">//线条透明度</span><br><span class="hljs-attr">c</span>: <span class="hljs-title function_">n</span>(i, <span class="hljs-string">&quot;color&quot;</span>, <span class="hljs-string">&quot;0,0,0&quot;</span>), <span class="hljs-comment">//线条颜色</span><br><span class="hljs-attr">n</span>: <span class="hljs-title function_">n</span>(i, <span class="hljs-string">&quot;count&quot;</span>, <span class="hljs-number">100</span>) <span class="hljs-comment">//线条数量</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">o</span>(<span class="hljs-params"></span>) &#123;<br>a = m.<span class="hljs-property">width</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span> ||<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientWidth</span> || <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span>,<br>c = m.<span class="hljs-property">height</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span> ||<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientHeight</span> || <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientHeight</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">i</span>(<span class="hljs-params"></span>) &#123;<br>r.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, a, c);<br><span class="hljs-keyword">var</span> n, e, t, o, m, l;<br>s.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">i, x</span>) &#123;<br><span class="hljs-keyword">for</span> (i.<span class="hljs-property">x</span> += i.<span class="hljs-property">xa</span>, i.<span class="hljs-property">y</span> += i.<span class="hljs-property">ya</span>, i.<span class="hljs-property">xa</span> *= i.<span class="hljs-property">x</span> &gt; a || i.<span class="hljs-property">x</span> &lt; <span class="hljs-number">0</span> ? -<span class="hljs-number">1</span> :<br><span class="hljs-number">1</span>, i.<span class="hljs-property">ya</span> *= i.<span class="hljs-property">y</span> &gt; c || i.<span class="hljs-property">y</span> &lt; <span class="hljs-number">0</span> ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>, r.<span class="hljs-title function_">fillRect</span>(i.<span class="hljs-property">x</span> - <span class="hljs-number">.5</span>, i.<span class="hljs-property">y</span> - <span class="hljs-number">.5</span>, <span class="hljs-number">1</span>,<br><span class="hljs-number">1</span>), e = x + <span class="hljs-number">1</span>; e &lt; u.<span class="hljs-property">length</span>; e++) n = u[e],<br><span class="hljs-literal">null</span> !== n.<span class="hljs-property">x</span> &amp;&amp; <span class="hljs-literal">null</span> !== n.<span class="hljs-property">y</span> &amp;&amp; (o = i.<span class="hljs-property">x</span> - n.<span class="hljs-property">x</span>, m = i.<span class="hljs-property">y</span> - n.<span class="hljs-property">y</span>, l<br>= o * o + m * m, l &lt; n.<span class="hljs-property">max</span> &amp;&amp; (n === y &amp;&amp; l &gt;= n.<span class="hljs-property">max</span> / <span class="hljs-number">2</span> &amp;&amp; (i.<span class="hljs-property">x</span> -= <span class="hljs-number">.03</span> * o,<br>i.<span class="hljs-property">y</span> -= <span class="hljs-number">.03</span> * m), t = (n.<span class="hljs-property">max</span> - l) / n.<span class="hljs-property">max</span>, r.<span class="hljs-title function_">beginPath</span>(), r.<span class="hljs-property">lineWidth</span> = t /<br><span class="hljs-number">2</span>, r.<span class="hljs-property">strokeStyle</span> = <span class="hljs-string">&quot;rgba(&quot;</span> + d.<span class="hljs-property">c</span> + <span class="hljs-string">&quot;,&quot;</span> + (t + <span class="hljs-number">.2</span>) + <span class="hljs-string">&quot;)&quot;</span>, r.<span class="hljs-title function_">moveTo</span>(i.<span class="hljs-property">x</span>, i.<span class="hljs-property">y</span>),<br>r.<span class="hljs-title function_">lineTo</span>(n.<span class="hljs-property">x</span>, n.<span class="hljs-property">y</span>), r.<span class="hljs-title function_">stroke</span>()))<br>&#125;),<br><span class="hljs-title function_">x</span>(i)<br>&#125;<br><span class="hljs-keyword">var</span> a, c, u, m = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;canvas&quot;</span>),<br>d = <span class="hljs-title function_">t</span>(),<br>l = <span class="hljs-string">&quot;c_n&quot;</span> + d.<span class="hljs-property">l</span>,<br>r = m.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>),<br>x = <span class="hljs-variable language_">window</span>.<span class="hljs-property">requestAnimationFrame</span> || <span class="hljs-variable language_">window</span>.<span class="hljs-property">webkitRequestAnimationFrame</span><br>|| <span class="hljs-variable language_">window</span>.<span class="hljs-property">mozRequestAnimationFrame</span> || <span class="hljs-variable language_">window</span>.<span class="hljs-property">oRequestAnimationFrame</span> ||<br><span class="hljs-variable language_">window</span>.<span class="hljs-property">msRequestAnimationFrame</span> ||<br><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) &#123;<br><span class="hljs-variable language_">window</span>.<span class="hljs-built_in">setTimeout</span>(n, <span class="hljs-number">1e3</span> / <span class="hljs-number">45</span>)<br>&#125;,<br>w = <span class="hljs-title class_">Math</span>.<span class="hljs-property">random</span>,<br>y = &#123;<br><span class="hljs-attr">x</span>: <span class="hljs-literal">null</span>,<br><span class="hljs-attr">y</span>: <span class="hljs-literal">null</span>,<br><span class="hljs-attr">max</span>: <span class="hljs-number">2e4</span><br>&#125;;<br>m.<span class="hljs-property">id</span> = l,<br>m.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span> = <span class="hljs-string">&quot;position:fixed;top:0;left:0;z-index:&quot;</span> + d.<span class="hljs-property">z</span> +<br><span class="hljs-string">&quot;;opacity:&quot;</span> + d.<span class="hljs-property">o</span>,<br><span class="hljs-title function_">e</span>(<span class="hljs-string">&quot;body&quot;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">appendChild</span>(m),<br><span class="hljs-title function_">o</span>(),<br><span class="hljs-variable language_">window</span>.<span class="hljs-property">onresize</span> = o,<br><span class="hljs-variable language_">window</span>.<span class="hljs-property">onmousemove</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) &#123;<br>n = n || <span class="hljs-variable language_">window</span>.<span class="hljs-property">event</span>,<br>y.<span class="hljs-property">x</span> = n.<span class="hljs-property">clientX</span>,<br>y.<span class="hljs-property">y</span> = n.<span class="hljs-property">clientY</span><br>&#125;,<br><span class="hljs-variable language_">window</span>.<span class="hljs-property">onmouseout</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>y.<span class="hljs-property">x</span> = <span class="hljs-literal">null</span>,<br>y.<span class="hljs-property">y</span> = <span class="hljs-literal">null</span><br>&#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> s = [], f = <span class="hljs-number">0</span>; d.<span class="hljs-property">n</span> &gt; f; f++) &#123;<br><span class="hljs-keyword">var</span> h = <span class="hljs-title function_">w</span>() * a,<br>g = <span class="hljs-title function_">w</span>() * c,<br>v = <span class="hljs-number">2</span> * <span class="hljs-title function_">w</span>() - <span class="hljs-number">1</span>,<br>p = <span class="hljs-number">2</span> * <span class="hljs-title function_">w</span>() - <span class="hljs-number">1</span>;<br>s.<span class="hljs-title function_">push</span>(&#123;<br><span class="hljs-attr">x</span>: h,<br><span class="hljs-attr">y</span>: g,<br><span class="hljs-attr">xa</span>: v,<br><span class="hljs-attr">ya</span>: p,<br><span class="hljs-attr">max</span>: <span class="hljs-number">6e3</span><br>&#125;)<br>&#125;<br>u = s.<span class="hljs-title function_">concat</span>([y]),<br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-title function_">i</span>()<br>&#125;,<br><span class="hljs-number">100</span>)<br>&#125; ();<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>个人</category>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
